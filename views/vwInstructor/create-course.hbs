<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.5.2/css/fileinput.min.css" />
<link rel="stylesheet" href="/public/css/auth.css">
<style>
    h2{
        margin-left: -40px;
    }
    #form_table{
        max-width: none;
        box-shadow: none;
        padding: 0px;
    }
    .form__group input:hover, .form__group input:focus{
        border-top: none;
        border-left: none;
        border-right: none;
    }
    .error input,
    .error select  {
        border: none !important;
        border-bottom: 1px solid red !important;
        background-color: rgba(255, 0, 0, 0.1) !important;
    }
    
    .error-icon{
        right: 3%;
        top: 23.3%;
    }
    select + .error-icon{
        right: 8.7%;
        top: 37.3%;

    }
    *{
        font-family: "Gentleman";
    }
    main {
      flex: 1 0 auto;
    }

    body {
      background: #fff;
    }

    .mainForm .input-field input[type=date]:focus + label,
    .mainForm .input-field input[type=text]:focus + label,
    .mainForm .input-field input[type=email]:focus + label,
    .mainForm .input-field input[type=password]:focus + label {
      color: #1e2fe9;

    }

    .mainForm .input-field input[type=date]:focus,
    .mainForm .input-field input[type=text]:focus,
    .mainForm .input-field input[type=email]:focus,
    .mainForm .input-field input[type=password]:focus {
      border-bottom: 2px solid #1e2fe9;
      box-shadow: none;
    }
    input:not([type]), input[type=text], input[type=password], input[type=email], input[type=url], input[type=time], input[type=date], input[type=datetime-local], input[type=tel], input[type=number], input[type=search], textarea.materialize-textarea {
    background-color: transparent;
    border: none;
    border-bottom: 1px solid #9e9e9e;
    border-radius: 0;
    outline: none;
    height: 3rem;
    width: 100%;
    font-size: 1rem;
    margin: 0 0 6px 0;
    padding: 0;
    box-shadow: none;
    transition: all .3s;
    }
    .input-field label {
    color: #6c6b6b;
    position: absolute;
    top: 0.8rem;
    left: 1rem;
    font-size: 1rem;
    cursor: text;
    transition: .2s ease-out;
}
.input-field label.active {
    font-size: 0.8rem;
    -webkit-transform: translateY(-140%);
    transform: translateY(-140%);
}
.chapter-section{
    position: relative;
}
.remove-chapter{
 position: absolute;
    top: -8px;
    right: 0;
    cursor: pointer;
}
.remove-chapter i{
    font-weight: bold;
    font-size: 18px;
}
  </style>
</style>
<div class="container" style="min-height: 1500px; margin-top: 100px">
    <h2 style="color: red"><i>Course information</i> </h2>
    <hr>
    <form method="POST" id="form_table" class="form-1 mainForm mt-1" novalidate>

    <div class="input-field col s12 mt-4 form__group ">
        <input type="text" name="Name" class="name pl-4" id="Name" autocomplete="none">
        <label for="Name">Course title*</label>
        <i class="fa-solid fa-triangle-exclamation error-icon"></i>
        <span class="form__group-message email-message"></span>
    </div>

    <div class="input-field col s12 mt-4 form__group ">
        <input type="text" name="TinyDes" class="TinyDes pl-4" id="TinyDes" autocomplete="none">
        <label for="TinyDes">Course brief description</label>
        <i class="fa-solid fa-triangle-exclamation error-icon"></i>
        <span class="form__group-message email-message"></span>
    </div>

    <div class=" col s12 mt-5 form__group ">
        <label for="FullDes">Detail destination</label>
        <textarea name="FullDes" id="FullDes" rows="10" style="width: 100%"></textarea>
        <i class="fa-solid fa-triangle-exclamation error-icon"></i>
        <span class="form__group-message email-message"></span>
    </div>

    <div class="row mt-5 ml-1 " style="width: 100%">
        <div class="col form__group">
            <label >Category*</label>
            <select class="custom-select custom-select mb-3 choice-cate">
                <option value="" selected>Select Category</option>
                <option value="1">One</option>
                <option value="2">Two</option>
                <option value="3">Three</option>
            </select>
            <i class="fa-solid fa-triangle-exclamation error-icon"></i>
            <span class="form__group-message email-message"></span>
        </div>
        <div class="col form__group">
            <label >Topic*</label>
            <select class="custom-select custom-select mb-3 choice-topic">
                <option value="" selected>Select Topic</option>
                <option value="1">One</option>
                <option value="2">Two</option>
                <option value="3">Three</option>
            </select>
            <i class="fa-solid fa-triangle-exclamation error-icon"></i>
            <span class="form__group-message email-message"></span>
        </div>
    </div>
    <div class=" col s12 mt-2 form__group ">
        <label for="fuMain">Photo</label>
        <input type="file" id="fuMain" name="fuMain" accept=".jpg,.png,.gif">
        <span class="form__group-message email-message"></span>
    </div>

    <div class="input-field col s12 mt-5 form__group ">
        <label for="Price">Price</label>
        <input type="text" name="Price" id="Price" pattern="^\$\d{1,3}(,\d{3})*(\.\d+)?$" value="" data-type="currency">
        <i class="fa-solid fa-triangle-exclamation error-icon"></i>
        <span class="form__group-message email-message"></span>
    </div>
    <h2 class="mt-5" style="color: red"><i>Curriculum</i> </h2>
    <hr>
    
    <div class="chapter-wrapper">
        <div class="chapter-section container mb-4" style="border: 1px solid #ccc;" chapter="1">
            <div class="input-field col s12 mt-4 form__group d-flex" style="padding-left: 0;">
                <div class="col-auto" style="align-items: center; display: flex; justify-content: flex-start; padding-left:0">
                    <b class="chap-title" >Chapter 1:</b>
                </div>
                <div class="col">
                    <label for="chapter1-name">Chapter Name</label>
                    <input type="text" name="chapter[]" id="chapter1-name">
                </div>
            </div>
            <div class="input-field col s12 form__group d-flex " style="margin: 6px 0 6px 0;" lecture="1">
                <div class="col-auto" style="align-items: center; display: flex;">
                    <span>Lecture 1:</span>
                </div>
                <div class="col d-flex" >
                    <div class="col">
                        <label for="chapter1-lecture1-name">Lecture Name</label>
                        <input type="text" name="lecture[]" id="chapter1-lecture1-name">
                    </div>
                    <div class="col">
                        <label for="chapter1-lecture1-url">URL Video</label>
                        <input type="text" name="url[]" id="chapter1-lecture1-url">
                    </div>
                </div>
            </div>
            <button onclick="addLecture(this, event);" type="button" class="btn btn-light mt-2 mb-2 add-lecture" style="border: 1px solid rgb(219, 219, 219)">
                <i class="bi bi-plus-lg"></i>
                 Add more lecture
            </button>
        </div>
        <button onclick="addChapter(this, event);" type="button" class="btn btn-light mt-2 mb-2 add-lecture" style="border: 1px solid rgb(219, 219, 219)"><i class="bi bi-plus-lg"></i> Add more chapter</button>
    </div>
    
</form>


</div>

{{#section 'script'}}
 <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.5/js/materialize.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.5.2/js/plugins/buffer.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.5.2/js/plugins/filetype.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.5.2/js/plugins/piexif.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.5.2/js/plugins/sortable.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.5.2/js/fileinput.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.5.2/themes/fa4/theme.min.js"></script>
<script src="https://cdn.tiny.cloud/1/mkaemydy8btg089p8s8hb1ok60gyatj2vdic9oibqqlru367/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
<script>
    tinymce.init({
      selector: '#FullDes',
      menubar: false,
      plugins: ['paste',  'link', 'autolink', 'lists','table'],
      toolbar: [
        'undo redo | bold italic underline strikethrough | numlist bullist | alignleft aligncenter alignright | forecolor backcolor | table link image media',
      ],
    }); 
</script>
<script>
    $('#fuMain').fileinput({
      dropZoneEnabled: false,
      maxFileCount: 1,
      theme: 'fa4',
      allowedFileExtensions: ['jpg', 'png', 'gif'],
    });
  </script>
  <script>
    // Jquery Dependency

$("input[data-type='currency']").on({
    keyup: function() {
      formatCurrency($(this));
    },
    blur: function() { 
      formatCurrency($(this), "blur");
    }
});


function formatNumber(n) {
  // format number 1000000 to 1,234,567
  return n.replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ",")
}


function formatCurrency(input, blur) {
  // appends $ to value, validates decimal side
  // and puts cursor back in right position.
  
  // get input value
  var input_val = input.val();
  
  // don't validate empty input
  if (input_val === "") { return; }
  
  // original length
  var original_len = input_val.length;

  // initial caret position 
  var caret_pos = input.prop("selectionStart");
    
  // check for decimal
  if (input_val.indexOf(".") >= 0) {

    // get position of first decimal
    // this prevents multiple decimals from
    // being entered
    var decimal_pos = input_val.indexOf(".");

    // split number by decimal point
    var left_side = input_val.substring(0, decimal_pos);
    var right_side = input_val.substring(decimal_pos);

    // add commas to left side of number
    left_side = formatNumber(left_side);

    // validate right side
    right_side = formatNumber(right_side);
    
    // On blur make sure 2 numbers after decimal
  
    
    // Limit decimal to only 2 digits
    right_side = right_side.substring(0, 2);

    // join number by .
    input_val = "$" + left_side + "." + right_side;

  } else {
    // no decimal entered
    // add commas to number
    // remove all non-digits
    input_val = formatNumber(input_val);
    input_val =  input_val;
    

  }
  
  // send updated string to input
  input.val(input_val);

  // put caret back in the right position
  var updated_len = input_val.length;
  caret_pos = updated_len - original_len + caret_pos;
  input[0].setSelectionRange(caret_pos, caret_pos);
}

  </script>
{{/section}}

<script src="/public/script/validate.js"></script>
<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>

<script>
    Validator(
        {
            form: ".form-1",
            error_message: ".form__group-message",
            rules: [
                Validator.isRequire(".name"),
                Validator.isRequire(".choice-cate"),
                Validator.isRequire(".choice-topic"),
            ],
            onSubmit: function (data) {
                 document.querySelector(".form-1").submit();
            }
        })


</script>


<script>
    let chapters = 1;
    let lectures = [1];
    let chapterWrapper = document.querySelector('.chapter-wrapper');
    function removeChapter(t,e){
        let chapDel = +t.parentNode.getAttribute('chapter');
  
        if(chapDel<chapters){
            changeChapName(chapDel);
        }
        t.parentNode.remove();
        chapters--;
        lectures.splice(chapDel-1,1)
    }
    function changeChapName(chapDel){
        for(let i = chapDel + 1; i <= chapters; i++){
            let nowChap = i-1;
            let chapDiv = chapterWrapper.querySelector(`div[chapter='${i}']`);
            chapDiv.setAttribute('chapter', nowChap)
            chapDiv.querySelector('.chap-title').textContent = `Chapter ${nowChap}`;
            let labels = chapDiv.querySelectorAll('label');
            labels[0].setAttribute('for', `chapter${nowChap}-name`)
            labels[1].setAttribute('for', `chapter${nowChap}-lecture1-name`)
            labels[2].setAttribute('for', `chapter${nowChap}-lecture1-url`)

            let inputs = chapDiv.querySelectorAll('input');
            inputs[0].id = `chapter${nowChap}-name`
            inputs[1].id =  `chapter${nowChap}-lecture1-name`
            inputs[2].id = `chapter${nowChap}-lecture1-url`
        }
    }
    function addChapter(t,e){
        chapters++;
        lectures.push(1);
        htmlStr = `<div class="chapter-section container mb-4" style="border: 1px solid #ccc;" chapter="${chapters}">
            <button onclick="removeChapter(this, event);" type="button" class="btn btn-light mt-2 mb-2 remove-chapter">
                <i class="bi bi-x"></i>
            </button>
            <div class="input-field col s12 mt-4 form__group d-flex" style="padding-left: 0;">
                <div class="col-auto" style="align-items: center; display: flex; justify-content: flex-start; padding-left:0">
                    <b class="chap-title">Chapter ${chapters}:</b>
                </div>
                <div class="col">
                    <label for="chapter${chapters}-name">Chapter Name</label>
                    <input type="text" name="chapter[]" id="chapter${chapters}-name">
                </div>
            </div>
            <div class="input-field col s12 form__group d-flex " style="margin: 6px 0 6px 0;" lecture="1">
                <div class="col-auto" style="align-items: center; display: flex;">
                    <span>Lecture 1:</span>
                </div>
                <div class="col d-flex" >
                    <div class="col">
                        <label for="chapter${chapters}-lecture1-name">Lecture Name</label>
                        <input type="text" name="lecture[]" id="chapter${chapters}-lecture1-name">
                    </div>
                    <div class="col">
                        <label for="chapter${chapters}-lecture1-url">URL Video</label>
                        <input type="text" name="url[]" id="chapter${chapters}-lecture1-url">
                    </div>
                </div>
            </div>
            <button onclick="addLecture(this, event);" type="button" class="btn btn-light mt-2 mb-2 add-lecture" style="border: 1px solid rgb(219, 219, 219)">
                <i class="bi bi-plus-lg"></i>
                 Add more lecture
            </button>

        </div>`


        let htmlBtn = `<button onclick="addChapter(this, event);" type="button" class="btn btn-light mt-2 mb-2 add-lecture" style="border: 1px solid rgb(219, 219, 219)"><i class="bi bi-plus-lg"></i> Add more chapter</button>`

        let element = createElementFromHTML(htmlStr);
        let btn = createElementFromHTML(htmlBtn);
        t.remove();
        chapterWrapper.appendChild(element);
        chapterWrapper.appendChild(btn);
    }
    function addLecture(t,e){
        let parentDiv = t.parentNode;
        let curChap = +parentDiv.getAttribute('chapter');
        lectures[curChap-1]++
        let curLec = +lectures[curChap-1];
        let btnHtml = `<button onclick="addLecture(this, event);" type="button" class="btn btn-light mt-2 mb-2 add-lecture" style="border: 1px solid rgb(219, 219, 219)"><i class="bi bi-plus-lg"></i> Add more lecture</button>`
        let lectureHtml = `  
        <div class="input-field col s12 form__group d-flex" style="margin: 6px 0 6px 0;" lecture = "${curLec}">
            <div class="col-auto" style="align-items: center; display: flex;">
                <span>Lecture ${curLec}:</span>
            </div>
            <div class="col d-flex" >
                <div class="col">
                    <label for="chapter${curChap}-lecture${curLec}-name">Lecture Name</label>
                    <input type="text" name="lecture[]" id="chapter${curChap}-lecture${curLec}-name">
                </div>
                <div class="col">
                    <label for="chapter${curChap}-lecture${curLec}-url">URL Video</label>
                    <input type="text" name="url[]" id="chapter${curChap}-lecture${curLec}-url">
                </div>
             </div>
            <div class="col-auto d-flex align-items-center btn-wrapper">
                <button onclick="removeLecture(this,event);" type="button" class="btn btn-light"><i class="bi bi-x"></i> Remove</button>
            </div>
        </div>`
        t.remove();
        let childHtml = createElementFromHTML(lectureHtml);
        let button = createElementFromHTML(btnHtml);
        parentDiv.appendChild(childHtml);
        parentDiv.appendChild(button);
    }

    function removeLecture(t, e){
        let curLec = +t.parentNode.parentNode.getAttribute('lecture');
        let curChap =  +t.parentNode.parentNode.parentNode.getAttribute('chapter');
        if(curLec < lectures[curChap-1])
            changeLecName(curChap, curLec);

        lectures[curChap-1]--; 
        t.parentNode.parentNode.remove();

    }

    function changeLecName(curChap, curLec){
        let divChap = document.querySelector(`div[chapter='${curChap}']`)
        for(let i = curLec + 1; i <= lectures[curChap-1];i++){
            let div = divChap.querySelector(`div[lecture = '${i}']`);
            let nowLec = i-1;
            div.setAttribute('lecture', nowLec)
            div.querySelector('span').textContent = `Lecture ${nowLec}:`;
            let labels = div.querySelectorAll('label');
            labels[0].setAttribute('for',`chapter${curChap}-lecture${nowLec}-name`);
            labels[1].setAttribute('for',`chapter${curChap}-lecture${nowLec}-url`);
            let inputs = div.querySelectorAll('input');
            inputs[0].id = `chapter${curChap}-lecture${nowLec}-name`;
            inputs[1].id = `chapter${curChap}-lecture${nowLec}-url`;
        }
    }
    function createElementFromHTML(htmlString) {
        var div = document.createElement('div');
        div.innerHTML = htmlString.trim();
        return div.firstChild;
}
</script>